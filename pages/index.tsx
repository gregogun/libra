import Head from "next/head";
import { Box, Button, Flex, Link, styled, Typography } from "@aura-ui/react";
import { ConnectWallet, useConnect } from "arweave-wallet-ui-test";
import { account } from "@/lib/arweave";
import { getBookmarks, saveTx } from "@/lib/api";
import { focusManager, useQuery } from "@tanstack/react-query";
import { ArrowRightIcon } from "@radix-ui/react-icons";
import { useMotionAnimate } from "motion-hooks";
import { stagger } from "motion";
import { useEffect, useRef } from "react";
import { Loader } from "@/ui/Loader";
import { CreateDialog } from "@/modules/CreateDialog/CreateDialog";

const Main = styled("main", {
  display: "flex",
  alignItems: "center",
  flexDirection: "column",
  justifyContent: "center",
  gap: "$10",
});

export default function Home() {
  const { walletAddress } = useConnect();
  const bookmarkListRef = useRef<HTMLDivElement | null>(null);
  const { play } = useMotionAnimate(
    ".bookmark",
    { opacity: 1 },
    {
      delay: stagger(0.075),
      duration: 0.5,
      easing: "ease-in-out",
    }
  );
  const { data, isLoading, isError, status } = useQuery({
    queryKey: ["bookmarks"],
    queryFn: () => getBookmarks(walletAddress),
    // enabled: !!walletAddress,
  });

  // useEffect(() => {
  //   connectOnLoad();
  // }, []);

  // const connectOnLoad = async () => {
  //   if (!walletAddress && typeof window !== "undefined") {
  //     // get permissions
  //     const address = await window.arweaveWallet.getActiveAddress();
  //     if (address) {
  //       setState({ walletAddress: address });
  //     }
  //   }
  // };

  // Play the animation on mount of the component
  useEffect(() => {
    if (walletAddress && data && data.length > 0) {
      play();
    }
    console.log("loaded");
  }, [data, walletAddress]);

  return (
    <>
      <Head>
        <title>libra</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="favicon.ico" />
      </Head>
      <Flex
        css={{
          p: "$10",
        }}
        justify="between"
      >
        <Typography size="8" weight="6">
          libra
        </Typography>
        <ConnectWallet
          connectButtonVariant="ghost"
          connectButtonColorScheme="indigo"
          arweaveAccount={account}
          permissions={[
            "ACCESS_ADDRESS",
            "ACCESS_ALL_ADDRESSES",
            "DISPATCH",
            "SIGN_TRANSACTION",
          ]}
        />
      </Flex>
      <Main>
        {walletAddress ? (
          <>
            <CreateDialog>
              <Button colorScheme="indigo" variant="solid">
                Bookmark a Transaction
              </Button>
            </CreateDialog>
            {isLoading && <Loader />}
            <Flex direction="column" gap="5">
              {data?.map((data) => (
                <Link
                  className="bookmark"
                  css={{
                    fontSize: "$5",
                    lineHeight: "$5",
                    color: "inherit",
                    display: "inline-flex",
                    alignItems: "center",
                    gap: "$2",
                    backgroundColor: "$indigo2",
                    opacity: 0,

                    "& span": {
                      transition: "transform 300ms ease-in",
                    },

                    "&:hover": {
                      backgroundColor: "$indigo3",
                      color: "$indigo11",

                      "& span": {
                        transform: "translateX(4px)",
                        transition: "transform 300ms ease-in",
                      },
                    },
                  }}
                  variant="noUnderline"
                  href={`https://arweave.net/${data.targetId}`}
                  key={data.targetId}
                >
                  <Box css={{ display: "flex" }} as="span">
                    <ArrowRightIcon width={28} height={28} />
                  </Box>
                  {data.name}
                </Link>
              ))}
            </Flex>
          </>
        ) : (
          <Typography>
            Connect your wallet to start view or create bookmarks
          </Typography>
        )}
      </Main>
    </>
  );
}
